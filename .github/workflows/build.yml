name: Test and Build
on:
  push:
    branches:
      - main
      - develop
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/build.yml"
    tags:
      - "v*"
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - main
      - develop
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/build.yml"
permissions:
  contents: write
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        go-version: [1.23]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout codebase
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Test
        run: go test ./...

  build:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            binary_name: blackjack-linux-amd64
          - os: macos-latest
            goos: darwin
            goarch: amd64
            binary_name: blackjack-darwin-amd64
          - os: macos-latest
            goos: darwin
            goarch: arm64
            binary_name: blackjack-darwin-arm64
          - os: windows-latest
            goos: windows
            goarch: amd64
            binary_name: blackjack-windows-amd64.exe
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23
      - name: Checkout codebase
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          go build -ldflags "-s -w" -o ${{ matrix.binary_name }} ./cmd/main.go
      - name: Upload to Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.binary_name }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
